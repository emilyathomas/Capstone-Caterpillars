const { Sequelize, DataTypes, Model } = require('sequelize');
const sequelize = require('../config/database');

const Employer = require('./Employer');

class Employee extends Model { }

Employee.init({
    employeeID: {
        type: DataTypes.UUID,
        defaultValue: DataTypes.UUIDV4,
        primaryKey: true,
        unique: true,
        allowNull: false
    },
    firstName: {
        type: DataTypes.STRING(255)
    },
    lastName: {
        type: DataTypes.STRING(255)
    },
    ssn: {
        type: DataTypes.BIGINT,
        DEFAULT: null
    }
}, {
    sequelize,
    modelName: 'Employee',
    tableName: 'employee'
});

module.exports = Employee;
const { Sequelize, DataTypes, Model } = require('sequelize');
const sequelize = require('../config/database');

const Employee = require('./Employee');

class Employer extends Model {// Custom method to update hasEmployed based on SQL snippet
    static async updateHasEmployed() {
        const sql = `
        UPDATE employer
        SET hasEmployed = (
          SELECT COUNT(DISTINCT employedInJob.employeeIDs)
          FROM employedInJob
          WHERE employedInJob.withCompany = employer.companyName)`;
        await sequelize.query(sql, { type: Sequelize.QueryTypes.UPDATE });
    }
}

Employer.init({
    employerID: {
        type: DataTypes.UUID,
        defaultValue: DataTypes.UUIDV4,
        primaryKey: true,
        unique: true,
        allowNull: false,
        field: 'employerID'
    },
    companyName: {
        type: DataTypes.STRING,
        allowNull: true,

    },
    headquartersAddress: {
        type: DataTypes.STRING,
        allowNull: true,
    },
    parentCompany: {
        type: DataTypes.STRING,
        default: null
    },
    hasEmployed: {
        type: DataTypes.BIGINT,
        default: null
    },
    industry: {
        type: DataTypes.STRING,
        allowNull: true,
    },
    hasMerged: {
        type: DataTypes.TINYINT,
        default: null
    },
    incorporationDate: {
        type: DataTypes.DATE,
        default: null
    },
    dissolutionDate: {
        type: DataTypes.DATE,
        default: null
    },
}, {
    sequelize,
    modelName: 'Employer',
    tableName: 'employer',
    timestamps: false,
});

module.exports = Employer;
const { Sequelize, DataTypes, Model } = require('sequelize');
const sequelize = require('../config/database');

const Employer = require('./Employer');
const Employee = require('./Employee');

class EmployedInJob extends Model { }

EmployedInJob.init({
    id: {
        type: DataTypes.INTEGER,
        primaryKey: true,
        autoIncrement: true,
        allowNull: false,
        references: {
            model: Employee,
            key: 'id'
        }
    },
    theEmployee: {
        type: DataTypes.STRING(255),
        references: {
            model: Employee,
            key: 'employeeID',
            default: null,
        }
    },
    withCompany: {
        type: DataTypes.STRING(255),
        references: {
            model: Employee,
            key: 'employer'
        }
    },
    jobTitle: {
        type: DataTypes.STRING(255) // TINYTEXT equivalent
    },
    startDate: {
        type: DataTypes.DATE
    },
    endDate: {
        type: DataTypes.DATE
    }
}, {
    sequelize,
    modelName: 'EmployedInJob',
    tableName: 'employedInJob'
});

EmployedInJob.belongsTo(Employee, {
    foreignKey: 'id',
    as: 'employee'
});

EmployedInJob.belongsTo(Employee, {
    foreignKey: 'employer',
    as: 'company'
});

module.exports = EmployedInJob;